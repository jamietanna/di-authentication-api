name: Pre-merge checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  style-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Spotless
        run: ./gradlew --no-daemon spotlessCheck

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Unit Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --no-daemon test jacocoTestReport -x integration-tests:test -x account-management-integration-tests:test -x spotlessApply spotlessCheck
      - name: Run Integration Tests
        run: |
          ./gradlew --no-daemon :integration-tests:test :account-management-integration-tests:test jacocoTestReport
      - name: Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --no-daemon sonarqube
      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-reports
          path: integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Extract Cloudwatch logs
        if: failure()
        run: ./get-lambda-logs.sh
      - name: Upload Docker Container Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: docker-container-logs
          path: logs/
          retention-days: 5
      - name: Stop Services
        if: always()
        run: |
          ./gradlew --no-daemon :composeDownForced

